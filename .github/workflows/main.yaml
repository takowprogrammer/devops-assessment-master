name: Devops Assessment

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: self-hosted
    #container:
    #  image: maven:3.6.3-jdk-11

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    
    - name: Install Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.6

    - name: Build
      run: mvn compile

    - name: Test
      run: mvn test

    - name: Run application
      run: mvn exec:java
    
    # - name: Install dpkg
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y \
    #          ca-certificates \
    #          curl \
    #          gnupg \
    #          lsb-release \
    #          dpkg
    #     sudo dpkg --configure -a
    #     sudo apt-get -f install
        

    # - name: Install Docker
    #  # uses: docker-practice/actions-setup-docker@master
    #   if: failure()
    #   run: |
    #     # Update the package index
    #     sudo apt-get update
        
    #     # Install packages to allow apt to use a repository over HTTPS
    #     sudo apt-get install -y \
    #         apt-transport-https \
    #         ca-certificates \
        #     curl \
        #     gnupg \
        #     lsb-release
        
        # # Add Docker's official GPG key
        # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        
        # # Set up the stable repository
        # echo \
        #   "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
        #   $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        # # Install Docker Engine
        # sudo apt remove docker-ce
        # sudo apt autoremove
        # sudo apt-get update
        # sudo apt-get install -y -f docker-ce docker-ce-cli containerd.io
        
    # - name: Check Docker version
    #   # needs: Install Docker
    #   run: docker version

    - name: Set up Docker Build Action
      uses: docker/setup-buildx-action@v2

    - name: Build image
      uses: docker/build-push-action@v5
      with: 
        context: .
        tags: devops_assessment:latest
        push: false

    - name: Set up python for Ansible
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install Ansible Docker Module
      run: |
        python -m pip install --upgrade pip
        pip install ansible docker

    - name: Deploy application with Ansible
      run:  |
        ansible-playbook -i iventory ./ansible/deploy.yaml
      env: 
        DOCKER_IMAGE_TAG: devops_assessment:latest
